.. Ragdoll Tools documentation master file, created by
   sphinx-quickstart on Fri May  1 18:31:15 2020.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Welcome to Ragdoll Tools documentation!
=======================================

.. toctree::
   :maxdepth: 2
   :caption: Contents:

.. |test| image:: test.png
   :width: 100%

.. |pie_menu| image:: pie_menu.png

.. |search| image:: search.png
.. |shapes| image:: shapes.png
.. |vertex_groups| image:: vertex_groups.png
.. |bones| image:: bones.png
.. |constraints| image:: constraints.png
.. |constraints_selected_to_active| image:: constraints_selected_to_active.png
.. |limits| image:: limits.gif
.. |rbc| image:: rbc.png
.. |animated| image:: animated.png
.. |animated_pie| image:: animated_pie.png
.. |bake_hitboxes| image:: bake_hitboxes.png
.. |simulation_start| image:: simulation_start.png
.. |dynamic| image:: dynamic.png
.. |bake_bones| image:: bake_bones.png
.. |collisions| image:: collisions.png



Ragdoll tools is an addon for generating ragdolls in Blender.

All its function  are collected in one pie menu.

|pie_menu|


It can be found in the search popup

|search|



To make a ragdoll you need two things:

1.Generate hitboxes

2.Connect them with rigid body constraints




Hitboxes
========
To make hitboxes from mesh you need to select mesh object ,armature and run **Make hitboxes** operator from pie menu.
Here's how hitboxes look like with different operator settings.

|shapes|

Hitbox shape depends on vertex groups.

|vertex_groups|

If some bones don't have vertex groups,try to create them automatically using **Make vertex groups** operator.


Also,you can generate hitboxes from bones.

|bones|

Or just take any objects and connect them to the bones using **Connect** operator.
Each object will be connected to the nearest bone.




Constraints
===========
Select hitboxes and run **Make constraints** operator

|constraints|

.. tip::
   Since hitboxes are connected to the bones it doesn't matter whether you select hitboxes or their bones in pose mode,operator will work.
   Same is true for other operators from ragdoll pie menu.


By default, constraints are generated according to the bones hierarchy.
If bones are not parented to each other ,use different mode. **Selected to active** ,for example

|constraints_selected_to_active|


To set up constraint limits run **Set limits operator** and move hitboxes.

|limits|

When you are done,press ``Esc``

Also you can copy rigid body constraint settings from active to selected using corresponding operator.
Adjust copied properties in operator settings,if needed.


|rbc|

Animation
=========
Suppose,you have a model with animation and you want to enable ragdoll at some frame.




At first,you need to copy animation from bones to hitboxes.

To do that,make hitboxes follow bones and make them animated.

|animated|


.. tip::
   Hold ``Alt`` when you are changing this property , to change it on all selected objects at once.
   Use this `addon <https://github.com/xbodya13/keyframe_selected>`_  to animate it on selected objects.

   Also,you can manipulate this property from pie menu

   |animated_pie|




Bake hitboxes animation using **Bake** operator from pie menu and make bones follow them again.

|bake_hitboxes|

Snap constraints at the first frame of simulation.

|simulation_start|


.. tip::
   If you snapped constraint or change other physical property and this didn't affect simulation as expected,try to run **Clear cache** operator



Disable **Animated** property at some frame


|dynamic|

.. important::
   Make sure that animation doesn't violate constraint limits at this frame.





Bake physics.



Bake bones animation.


|bake_bones|



.. important::
   Avoid hitbox intersections,if they are not connected with constraint.
   If they are,you can disable collisions in constraint properties
   |collisions|



Video
=====

.. raw:: html

   <iframe width="560" height="315" src="https://www.youtube.com/embed/lobKcsbQqSY" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>



Files used in video:

`sample_static.blend <https://github.com/xbodya13/random/raw/master/sample_static.blend>`_

`sample_animated.blend <https://github.com/xbodya13/random/raw/master/sample_animated.blend>`_











